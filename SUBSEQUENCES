// pROGRAM TO FIND ALL POSSIBLE SUBSEQUENCES OF A GIVEN STRING 

#include<bits/stdc++.h>
using namespace std;

Class itee {
   public:

void helper(string s, string tempAns, int index)                //THE WHOLE GAME IS OF THIS FUNCTION TAKE ANDNOT TAKE 
{
if(s.size()==index)
{
cout<<tempAns<<endl;
return ;
}

//take condition 
helper(s, tempAns+s[index],index+1);

//Not Take condition 
helper(s, tempAns,index+1);
return ;
}

vector<string> subsequences(string s){    //REMEBER IN THIS FUNCTIION RETURN TYPE WAS GIVEN AS VECTOR<STRING> SO THAT'S WHY WE USED IT OTHERWISE THERE IS NO MEANING OF CREATING VECTOR<STRING> ans 
vector<string>ans;
helper(s,"",0);
return ans;
}
};

int main(){
string s;
cin>>s;
subsequences(s);
return 0;
}
